#!/bin/bash

set -e
BASE="$(dirname "$0")"

function chdo () {
    chroot "$ROOT" "$@"
} 

function enserv () {
    chroot "$ROOT" systemctl enable "$@"
}

function inspkg () {
    chroot "$ROOT" apt-get install --no-install-recommends --yes "$@"
}

ROOT="$1"
LIIMSUSER="liims"

if [ ! -d "$ROOT" ]; then
    echo "$ROOT is not a directory."
    exit 1
elif [ $(whoami) != 'root' ]; then
    echo "You are not root!"
    exit 1
fi

# root password
if [ -f "$BASE/.rootpasswd" ]; then
    ROOTPASSWD=$(cat "$BASE/.rootpasswd")
else
    while true; do
        echo -e "root password: "
        read -s ROOTPASSWD
        echo -e "root password again: "
        read -s ROOTPASSWD2

        [ "$ROOTPASSWD" == "$ROOTPASSWD2" ] && break
    done
fi

# debootstrap
debootstrap bullseye "$ROOT" http://mirrors.ustc.edu.cn/debian/
mount proc "$ROOT/proc" -t proc
mount sysfs "$ROOT/sys" -t sysfs

# apt
install -Dm 644 "$BASE/etc/apt/sources.list" "$ROOT/etc/apt/sources.list"
# install packages
# following packages may need interactive operations and should take care
# batch 1: X-related packages
inspkg xterm xserver-xorg xserver-xorg-video-vesa xserver-xorg-video-nouveau\
    xserver-xorg-video-intel xserver-xorg-video-fbdev xcompmgr
# batch 2: cli tools
inspkg busybox cron dhcpcd5 dnsutils htop inetutils-ftp inetutils-ping \
    inetutils-telnet iptables iptables-persistent iproute2 \
    iputils-arping iputils-clockdiff iputils-tracepath iso-codes \
    initramfs-tools ndisc6 netdata nyancat openssh-client openssh-server \
    procps rsync scrot sed tar unionfs-fuse usbutils vim
# batch 3: desktop components
inspkg fcitx fcitx-frontend-gtk2 fcitx-frontend-gtk3 gnome-icon-theme \
    gnome-themes-standard openbox slim fonts-arphic-uming fonts-droid-fallback \
    fonts-wqy-zenhei fbpanel xfonts-terminus fcitx-pinyin fcitx-table-wubi fcitx-ui-classic
# batch 4: misc
inspkg bash-completion locales net-tools
# batch 5: extra packages that not in original list
inspkg x11-utils libcurl4 curl ca-certificates dbus-x11
# batch 6: custom app
chdo curl https://ftp.lug.ustc.edu.cn/~taoky/midori-liims_9.0-SNAPSHOT-1640974719_amd64.deb > $ROOT/tmp/midori.deb
inspkg /tmp/midori.deb

# Assistant scripts and programs
mkdir -p "$ROOT/liims/bin"
echo 'export PATH=$PATH:/liims/bin' > "$ROOT/etc/profile.d/liims.sh"
echo "export LIIMSUSER=$LIIMSUSER" >> "$ROOT/etc/profile.d/liims.sh"

for script in "$BASE/bin/*.sh"; do
    install -Dm 755 $script "$ROOT/liims/bin"
done

unset CFLAGS
cc "$BASE/bin/heartbeat.c" -o "$ROOT/liims/bin/heartbeat" -lcurl
cc "$BASE/bin/xidle.c" -o "$ROOT/liims/bin/xidle" -lX11 -lXext -lXss

# SSH login for root
cp $BASE/etc/ssh/* "$ROOT/etc/ssh"
echo -e "$ROOTPASSWD\n$ROOTPASSWD" | chdo passwd
mkdir -p "$ROOT/root/.ssh"
chmod 700 "$ROOT/root/.ssh"
install -Dm 600 "$BASE/etc/authorized_keys" "$ROOT/root/.ssh/authorized_keys"
enserv ssh

# resolv.conf
echo "nameserver 2001:da8:d800::17" > "$ROOT/etc/resolv.conf"
cat "$BASE/etc/hosts" >> "$ROOT/etc/hosts"

# dhcpcd
enserv dhcpcd

# time and NTP
chdo ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
echo -e "[Time]\nNTP=time.ustc.edu.cn" > "$ROOT/etc/systemd/timesyncd.conf"
enserv systemd-timesyncd.service

# locale
echo -e "en_US.UTF-8 UTF-8\nzh_CN.GBK GBK\nzh_CN.UTF-8 UTF-8" > \
        "$ROOT/etc/locale.gen"
chdo locale-gen

# iptables
mkdir -p "$ROOT/etc/iptables"
cp "$BASE/etc/iptables/iptables.rules" "$ROOT/etc/iptables/rules.v4"
cp "$BASE/etc/iptables/ip6tables.rules" "$ROOT/etc/iptables/rules.v6"
enserv iptables.service

# crontab
cp "$BASE/etc/root.crontab" "$ROOT/tmp/"
chdo crontab "/tmp/root.crontab"
enserv cron

# slim
cp "$BASE/etc/slim.conf" "$ROOT/etc/"
chdo systemctl set-default graphical.target

# netdata
enserv netdata
cp -r "$BASE/etc/netdata/" "$ROOT/etc/"

# prevent systemd from changing network interface name
chdo ln -s /dev/null /etc/udev/rules.d/80-net-setup-link.rules

# user specific
chdo userdel -fr "$LIIMSUSER" || true
chdo useradd -m -g users -s /bin/bash "$LIIMSUSER"
cp -r "$BASE/user/." "$ROOT/home/$LIIMSUSER"
chdo chown -R "$LIIMSUSER" "/home/$LIIMSUSER"

# kernel
# TODO: initramfs.conf
install -Dm644 "$BASE/initramfs-tools/initramfs.conf" "$ROOT/etc/initramfs-tools/initramfs.conf"
install -Dm644 "$BASE/initramfs-tools/modules" "$ROOT/etc/initramfs-tools/modules"
install -Dm755 "$BASE/initramfs-tools/scripts/init-bottom/overlay.sh" "$ROOT/etc/initramfs-tools/scripts/init-bottom/overlay.sh"

inspkg linux-image-amd64

# cleanup
umount "$ROOT/proc"
umount "$ROOT/sys"
chdo apt-get clean
